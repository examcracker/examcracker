https://javascriptobfuscator.com/Javascript-Obfuscator.aspx

	if (isOwner == "yes") {
		gap = 10;
    }
	
	var video;
	var manifest;
	var lastplayertime = 0;
	var nowplayer = 0;
	var now = 0;
	var lasttime = 0;
	var lastdurationplayed = 0
	var durationplayed = 0;
	var coreapi = window.coreapi;
	var client = new coreapi.Client();
	var lastdurationsent = 0;
	var playergap = 0;


    // Listen to the custom shaka-ui-loaded event, to wait until the UI is loaded.
    if (isLive == "true") {
        document.addEventListener('DOMContentLoaded', initApp); 
    }  else {
        document.addEventListener('shaka-ui-loaded', initPlayer);
    }

    function getUTCTimeSecs() {
		return new Date().getTime()/1000;
	}

	function update() {
		var durationdiff = durationplayed - lastdurationsent;
		lastdurationsent = durationplayed;
		var isDebug = debug;
		var url = window.location.protocol + "//" + window.location.hostname;
		if (isDebug == "on") {
			url = url + ":" + window.location.port;
		}

		if (isOwner != "yes") {
			url = url + "/course/updateDurationPlayed/" + enrolledcourseid + "/" + Math.floor(durationdiff);
		}
		else {
			url = url + "/course/updateDurationPlayedProvider/" + courseid + "/" + Math.floor(durationdiff);
		}
		var xmlHttp = new XMLHttpRequest();
		xmlHttp.open("GET", url, true);
		xmlHttp.send();
	}

	function onPlaying() {
		now = getUTCTimeSecs();
		nowplayer = video.currentTime;

		if (lasttime == 0) {
			lastplayertime = nowplayer;
			lasttime = now;
			return;
		}

		playergap = nowplayer - lastplayertime;
		if(playergap < 0) {
			lastplayertime = nowplayer;
			lasttime = now;
			return;
		}

		var systemgap = now - lasttime;
		if(Math.abs(systemgap - playergap) < 3) {
			durationplayed = durationplayed + playergap;
			lastplayertime = nowplayer;
			lasttime = now;

			//console.log(durationplayed);

			if(durationplayed - lastdurationplayed > gap) {
				lastdurationplayed = durationplayed;
				update();
			}
			return;
		}

		// system time and player time deviations are different, either its paused, stalled or sought forward
		if(systemgap > playergap) {
			durationplayed = durationplayed + playergap;
		}

		//console.log(durationplayed);

		lastplayertime = nowplayer;
		lasttime = now;

		if(durationplayed - lastdurationplayed > gap) {
			lastdurationplayed = durationplayed;
			update();
		}
	}

	function onErrorEvent(event) {
		onError(event.detail);
	}

	function onError(error) {
		console.error('Error code', error.code, 'object', error);
	}

	function initApp() {
		shaka.polyfill.installAll();

		if (shaka.Player.isBrowserSupported()) {
            if (isLive == "true") {
			  initPlayer();
            }
		} else {
			console.error('Browser not supported!');
		}
	}

	function initPlayer() {
		
		video = document.getElementById('encplayer');
        var player;

        if (isLive == "true") {
            var player = new shaka.Player(video);
          }  else {
            const ui = video['ui'];
            var uiConfig = {};
            uiConfig['controlPanelElements'] = ['play_pause','time_and_duration', 'rewind', 'fast_forward', 'spacer', 'mute', 'volume', 'fullscreen'];
            //uiConfig['overflowMenuButtons'] = []
            ui.configure(uiConfig);
            const controls = ui.getControls();
            var player = controls.getPlayer();
        }

		if (isLive == "false") {
			player.configure({
				drm: {
					clearKeys: {
						kid : kidkey,
						kid : kidkey
					}
				}
			});
		}

		video.addEventListener('timeupdate', onPlaying);
		window.player = player;

		player.addEventListener('error', onErrorEvent);
		player.load(manifest).then(function() {
		}).catch(onError);
	}

    if (isOwner == "yes") {
        if (isLive == "true") {
			manifest = liveUrl;
        }
        else {
            manifest = "https://"+bucketname+".sgp1.cdn.digitaloceanspaces.com/" + videokey + "/" + videokey + ".mpd";
        }
		document.addEventListener('DOMContentLoaded', initApp);
	} else {
		var accepted = 0;
        var tracktime = 0;

        if (disableaccess) {
            accepted = 1;
            tracktime = 1;
        } else {
            var deviceJSON = "DUMMYSTRING";
            var isDebug = debug;
            var url = window.location.protocol + "//" + window.location.hostname;
            if (isDebug == "on") {
                url = url + ":" + window.location.port;
            }
            url = url + accessurl + deviceJSON;
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open("GET", url, false);
            xmlHttp.send(null);
            accepted = (/True/).test(xmlHttp.responseText);
        }

		if (accepted) {
			if (isLive == "true") {
				manifest = liveUrl;
			} else {
				manifest = "https://"+bucketname+".sgp1.cdn.digitaloceanspaces.com/" + videokey + "/" + videokey + ".mpd";
			}

			if(tracktime) {
				document.addEventListener('DOMContentLoaded', initApp);
			}
        }
        else {
            alert("This device is unknown. Authenticate yourself by the link sent to your email.");
        }
	}

#user  nobody;
worker_processes  1;

error_log  logs/error.log debug;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    server {
        listen       8080;
        server_name  localhost;
        #ssl on;
        #ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        #ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        # sample handlers
        location /on_play {
            proxy_pass https://www.gyaanhive.com/schedule/on_play;
        }
        location /on_publish {
            proxy_pass https://www.gyaanhive.com/schedule/on_publish;
        }
        location /on_publish_done {
            proxy_pass https://www.gyaanhive.com/schedule/on_publish_done;
        }
        location /auth/ {
            internal;
            proxy_pass              $auth_request_uri?addr=$remote_addr&$hls_args;
            proxy_pass_request_body off;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }
        #location /vod {
        #    alias /var/myvideos;
        #}
        location /hls {
            set $auth_request_uri "https://www.gyaanhive.com/schedule/on_play";
            set $hls_args $args;
            auth_request /auth/;
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;                
            }
            root /root/;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*';
        }

        # rtmp stat
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }
        location /stat.xsl {
            # you can move stat.xsl to a different location
            root /usr/build/nginx-rtmp-module;
        }

        # rtmp control
        location /control {
            rtmp_control all;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    server {
        listen 443;
        server_name localhost;

        root /var/www/html;
        index index.html index.htm;

        ssl on;
        ssl_certificate /etc/nginx/ssl/lab.company.com.crt;
        ssl_certificate_key /etc/nginx/ssl/lab.company.com.key;
        ssl_session_timeout 5m;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
        ssl_prefer_server_ciphers on;
        # sample handlers
        location /on_play {
            proxy_pass https://www.gyaanhive.com/schedule/on_play;
        }
        location /on_publish {
            proxy_pass https://www.gyaanhive.com/schedule/on_publish;
        }
        location /on_publish_done {
            proxy_pass https://www.gyaanhive.com/schedule/on_publish_done;
        }
        location /auth/ {
            internal;
            proxy_pass              $auth_request_uri?addr=$remote_addr&$hls_args;
            proxy_pass_request_body off;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }
        location /hls {
            set $auth_request_uri "https://www.gyaanhive.com/schedule/on_play";
            set $hls_args $args;
            auth_request /auth/;
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;                
            }
            root /root/;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*';
        }
    }

}

rtmp {
    server {
        listen 1935;
        ping 30s;
        notify_method get;

        application gyaanhive {
            live on;
            # sample play/publish handlers
            on_play http://localhost:8080/on_play;
            on_publish http://localhost:8080/on_publish;
            on_publish_done http://localhost:8080/on_publish_done;
            # sample recorder
            #recorder rec1 {
            #    record all;
            #    record_interval 30s;
            #    record_path /tmp;
            #    record_unique on;
            #}

            # sample HLS
            hls on;
            hls_path /root/hls;
            hls_fragment 6s;
            hls_playlist_length 60s;
            deny play all;
            #hls_sync 100ms;
            #exec ffmpeg -i rtmp://139.59.32.199/$app/$name -vcodec copy -map 0:a -map 0:v -acodec copy -f flv  rtmp://139.59.32.199/hls/$name;
        }
        #application hls {
        #    live on;
        #    hls on;
        #    hls_path /root/hls/;
        #    hls_fragment 6s;
        #    hls_playlist_length 60s;
       #}

        # Video on demand
        #application vod {
        #    play /var/Videos;
        #}

        # Video on demand over HTTP
        #application vod_http {
        #    play http://localhost:8080/vod/;
        #}
    }
}